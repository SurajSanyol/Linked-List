#include <iostream>
using namespace std;

class Node{
     
     public:
        int data;
        Node* next;

        Node(int data){
           this->next = NULL;
           this->data = data;
        }
};

 void printList(Node* &head){
      
      Node* temp=head;
      while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
      }
 }


void removeDepulicate(Node * &head)
{
   
   if(head==NULL)
   {
     cout<<"Linked List is Empty ";
    return;
   }

   if(head->next==NULL)
   {
      cout<<"Only one Node is present in LinkedList ";
      return ;
   }

   Node* curr = head;
 
  while(curr!=NULL)
  {
      
      if(curr->next!=NULL && (curr->data == curr->next->data))
      {

             Node *temp = curr->next;
             curr->next = curr->next->next;

             temp->next = NULL;
             delete temp;

      }
      else
      {
           curr = curr->next;
      }
  }

}


int main() {

  Node* first = new Node(1);
  Node* second = new Node(2);
  Node* third = new Node(2);
  Node* fourth = new Node(3);
  Node* fifth = new Node(3);
  Node* sixth = new Node(4);

  Node* head = first;

  first->next = second;
  second->next = third;
  third->next = fourth;
  fourth->next = fifth;
  fifth->next = sixth;
  
  printList(head);
  cout<<endl;
  
  removeDepulicate(head);

  printList(head);
  cout<<endl;

  return 0;
}
